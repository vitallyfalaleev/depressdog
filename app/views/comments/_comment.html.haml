.comment
  .content
    = link_to comment.user.name, user_path(comment.user.id), class: 'author'
    .metadata
      %span.date= comment.created_at.to_s(:ru_datetime)
    .text= comment.body
    = render 'likes/likes', object: comment, method: 'Comment'
    .actions
      .ui.accordion
        -if owner(comment.user_id)
          = link_to 'Destroy', comment,
                        method: :delete,data: { confirm: 'Are you sure?' },
                        class: 'reply'
          %a.title.reply
            %i.dropdown.icon
            Edit
          .content
            = form_for comment,
              html: {class: 'ui reply form transition hidden'} do |f|
              .field
                = f.text_area :body, maxlength: "500", minlength: 1
              .ui.buttons
                = f.submit 'Save', class: 'ui green button'
                = f.button 'reset',type: :reset, class: 'ui orange button'
        %a.title.reply
          %i.dropdown.icon
          Reply
        .content
          = form_for Comment.new(commentable: comment),
            html: {class: 'ui reply form transition hidden'} do |f|
            = f.hidden_field :commentable_type, value: 'Comment'
            = f.hidden_field :commentable_id, value: comment.id
            .field
              = f.text_area :body, maxlength: "500"
            .ui.buttons
              = f.submit 'Save', class: 'ui green button'
              = f.button 'reset',type: :reset, class: 'ui orange button'

    - if comment.comments.any?
      .comments
        = render comment.comments